{"version":3,"sources":["store/types.js","shared/utils/initMapDispatchToProps.js","shared/utils/createActions.js","shared/utils/handleResponse.js","shared/utils/toCelsius.js","shared/utils/toFahrenheit.js","store/actions.js","store/handlers.js","http/http.service.js","store/effects.js","store/reducers.js","store/state-model.js","shared/material-ui/material-theme.js","shared/components/arrow/arrow.component.js","shared/components/arrowGroup/arrowGroup.component.js","shared/components/bar/bar.component.js","shared/components/barChart/barChart.component.js","shared/components/block/block.component.js","shared/utils/formatDate.js","shared/components/blockGroup/blockGroup.component.js","shared/components/checkbox/checkbox.component.js","shared/components/checkboxGroup/checkboxGroup.component.js","shared/components/loader/loader.component.js","pages/weather/weather.component.js","pages/weather/weather.component.style.js","App.js","serviceWorker.js","index.js"],"names":["fetchWeather","fetchWeatherSuccess","fetchWeatherFailure","createAction","type","payload","handleResponse","state","response","data","dates","list","forEach","weather","date","dt_txt","slice","indexOf","push","length","temp","main","toCelsius","reduce","acc","init","convertKalvinToCelsius","toFixed","toFahrenheit","convertKalvinToFahrenheit","FetchWeather","types","SwitchBetweenTemps","GoBackwards","GoForwards","SelectWeatherByDay","Handlers","action","selectedDate","axiosInstance","axios","baseURL","http","weatherEndPoint","handleError","weatherSaga","call","put","console","warn","takeLatest","effects","createSagaMiddleware","weatherStore","createStore","initialState","applyMiddleware","run","Object","freeze","fahrenheit","celsius","Theme","createMuiTheme","palette","primary","blue","secondary","pink","contrastThreshold","tonalOffset","typography","h1","fontSize","fontWeight","h2","body1","Arrow","direction","Fab","Icon","color","ArrowGroup","Grid","container","justify","alignItems","map","arrow","index","key","Bar","temperature","style","flexBasis","Paper","maxWidth","backgroundColor","paddingTop","Typography","variant","celsiusShort","fahrenheitShort","BarChart","day","Block","description","block","selected","onSelect","border","cursor","onClick","minWidth","height","textAlign","dateISO","Date","split","join","Intl","DateTimeFormat","year","month","format","formatDate","BlockGroup","blocks","wrap","Checkbox","selection","defaultSelected","onChange","FormControlLabel","control","Radio","value","label","checked","CheckboxGroup","selections","FormControl","width","margin","RadioGroup","aria-label","name","Loader","loadingText","CircularProgress","WeatherComponent","this","props","classes","switchBetweenTemps","selectWeatherByDay","className","checkboxGroup","arrowGroup","blockGroup","barChart","loadText","Component","connect","dispatch","actions","goBackwards","goForwards","initMapDispatchToProps","withStyles","marginBottom","App","ThemeProvider","theme","store","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a7a1f4f.chunk.js","sourcesContent":["export const fetchWeather = '[WEATHER] Fetch weather';\r\nexport const fetchWeatherSuccess = '[WEATHER] Fetch weather success';\r\nexport const fetchWeatherFailure = '[WEATHER] Fetch weather failure';\r\n\r\nexport const switchBetweenTemps = '[WEATHER] Switch between temps';\r\nexport const goBackwards = '[WEATHER] Go backwards';\r\nexport const goForwards = '[WEATHER] Go forwards';\r\nexport const selectWeatherByDay = '[WEATHER] Select weather by day';\r\n","import * as actions from '../../store/actions';\r\n\r\nexport const initMapDispatchToProps = dispatch => ({\r\n    fetchWeather: () => dispatch(actions.FetchWeather),\r\n    switchBetweenTemps: (type) => dispatch({...actions.SwitchBetweenTemps, payload: type}),\r\n    goBackwards: () => dispatch(actions.GoBackwards),\r\n    goForwards: () => dispatch(actions.GoForwards),\r\n    selectWeatherByDay: (day) => dispatch({...actions.SelectWeatherByDay, payload: day}),\r\n});","export const createAction = (type, payload) => ({type, payload});","export const dateFormat = 10;\r\n\r\nexport const handleResponse = (state, response) => {\r\n    const data = [];\r\n    const dates = [];\r\n\r\n    response.data.list.forEach(weather => {\r\n        const date = weather.dt_txt.slice(0, dateFormat);\r\n\r\n        if (!~dates.indexOf(date)) {\r\n            dates.push(date);\r\n            data.push([]);\r\n        }\r\n\r\n        data[data.length - 1].push(\r\n            {\r\n                date: weather.dt_txt,\r\n                temp: weather.main.temp\r\n            }\r\n        );\r\n    });\r\n\r\n    return {\r\n        ...state,\r\n        data,\r\n    };\r\n};\r\n","export const fromKalvinToCelsius = 273.15;\r\n\r\nexport const convertKalvinToCelsius = (dates) =>\r\n    (dates.reduce && dates.reduce((acc, init) => acc + init.temp / dates.length, 0)) || dates;\r\nexport const toCelsius = (dates) => (convertKalvinToCelsius(dates) - fromKalvinToCelsius).toFixed();\r\n","export const fromKalvinToFahrenheit = 273.15;\r\n\r\nexport const convertKalvinToFahrenheit = (dates) =>\r\n    (dates.reduce && dates.reduce((acc, init) => acc + init.temp / dates.length, 0)) || dates;\r\nexport const toFahrenheit = (dates) => ((convertKalvinToFahrenheit(dates) - fromKalvinToFahrenheit) * 9/5 + 32).toFixed();","import * as types from './types';\r\nimport { createAction } from '../shared/utils';\r\n\r\nexport const FetchWeather = createAction(types.fetchWeather);\r\nexport const SwitchBetweenTemps = createAction(types.switchBetweenTemps);\r\nexport const GoBackwards = createAction(types.goBackwards);\r\nexport const GoForwards = createAction(types.goForwards);\r\nexport const SelectWeatherByDay = createAction(types.selectWeatherByDay);\r\n","import * as types from './types';\r\nimport { handleResponse } from '../shared/utils';\r\n\r\nexport const Handlers = {\r\n    [types.fetchWeatherSuccess]: (state, action) => handleResponse(state, action.payload),\r\n    [types.switchBetweenTemps]: (state, action) => ({...state, temp: action.payload}),\r\n    [types.goBackwards]: (state) => ({...state}),\r\n    [types.goForwards]: (state) => ({...state}),\r\n    [types.selectWeatherByDay]: (state, action) => ({...state, selectedDate: action.payload}),\r\n};","import * as axios from \"axios\";\r\n\r\nimport http from '../config/weather.config';\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: http.weatherEndPoint\r\n});","import { call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport * as types from './types';\r\nimport { axiosInstance } from '../http';\r\nimport {createAction} from '../shared/utils';\r\n\r\nfunction* fetchWeather() {\r\n    try {\r\n        const weather = yield call(axiosInstance);\r\n        yield put(createAction(types.fetchWeatherSuccess, weather));\r\n    } catch (e) {\r\n        yield put(createAction(types.fetchWeatherFailure));\r\n    }\r\n}\r\n\r\nfunction* handleError() {\r\n    yield console.warn('Something went wrong.');\r\n}\r\n\r\nexport default function* weatherSaga() {\r\n    yield takeLatest(types.fetchWeather, fetchWeather);\r\n\r\n    yield takeLatest([types.fetchWeatherFailure], handleError);\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { Handlers } from './';\r\nimport { initialState } from './';\r\nimport weatherSaga from './effects';\r\n\r\nconst effects = createSagaMiddleware();\r\n\r\nexport const weatherReducer = (state = initialState, action) =>\r\n    (Handlers[action.type] && Handlers[action.type](state, action)) || state;\r\nexport const weatherStore = createStore(weatherReducer, applyMiddleware(effects));\r\n\r\neffects.run(weatherSaga);\r\n","export const tempEnums = Object.freeze({\r\n    fahrenheit: 0,\r\n    celsius: 1\r\n});\r\n\r\nexport const initialState = {\r\n    temp: tempEnums.fahrenheit,\r\n    data: null,\r\n    selectedDate: null\r\n};\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport blue from '@material-ui/core/colors/indigo';\r\nimport pink from '@material-ui/core/colors/pink';\r\n\r\nexport const Theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: pink,\r\n        contrastThreshold: 3,\r\n        tonalOffset: 0.2,\r\n    },\r\n    typography: {\r\n        h1: {\r\n            fontSize: 28,\r\n            fontWeight: 600,\r\n        },\r\n        h2: {\r\n            fontSize: 24,\r\n            fontWeight: 500,\r\n        },\r\n        body1: {\r\n            fontSize: 18,\r\n            fontWeight: 400,\r\n        },\r\n    },\r\n});","import React from 'react';\r\n\r\nimport {\r\n    Fab,\r\n    Icon\r\n} from '../../../shared/material-ui';\r\n\r\n// arrow_back, arrow_forward\r\n\r\nexport const Arrow = ({direction}) => (\r\n    <Fab>\r\n        <Icon\r\n            color={'primary'}\r\n        >{direction}</Icon>\r\n    </Fab>\r\n);\r\n","import React from 'react';\r\n\r\nimport { Arrow } from '../';\r\nimport { Grid } from '../../../shared/material-ui';\r\n\r\nexport const ArrowGroup = () => (\r\n    <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n    >\r\n        {['arrow_back', 'arrow_forward'].map((arrow, index) => (\r\n            <Arrow\r\n                key={index}\r\n                direction={arrow}\r\n            />\r\n        ))}\r\n    </Grid>\r\n);","import React from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Typography\r\n} from '../../../shared/material-ui';\r\nimport {celsiusShort, fahrenheitShort} from \"../../../i18n/weather.en\";\r\n\r\nexport const Bar = ({temperature, type}) => (\r\n    <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        style={{flexBasis: 38}}\r\n    >\r\n        <Paper\r\n            style={{\r\n                maxWidth: 38,\r\n                backgroundColor: '#f50057',\r\n                paddingTop: type ? temperature * 3.5 : temperature / 1.1\r\n            }}\r\n        />\r\n        <Typography\r\n            variant='body1'\r\n        >{temperature} {(type && celsiusShort) || fahrenheitShort}</Typography>\r\n    </Grid>\r\n);\r\n","import React from 'react';\r\n\r\nimport { Bar } from '../';\r\nimport { Grid } from '../../../shared/material-ui';\r\nimport {toCelsius, toFahrenheit} from \"../../utils\";\r\n\r\nexport const BarChart = ({date, type}) => (\r\n    <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n    >\r\n        {date.map((day, index) => (\r\n            <Bar\r\n                key={index}\r\n                type={type}\r\n                temperature={(type && toCelsius(day.temp)) || toFahrenheit(day.temp)}\r\n            />\r\n        ))}\r\n    </Grid>\r\n);","import React from 'react';\r\n\r\nimport {\r\n    Paper,\r\n    Typography,\r\n    Grid\r\n} from '../../../shared/material-ui';\r\n\r\nimport {\r\n    celsiusShort,\r\n    fahrenheitShort\r\n} from '../../../i18n/weather.en';\r\nimport {\r\n    formatDate,\r\n    toCelsius,\r\n    toFahrenheit\r\n} from '../../utils';\r\n\r\nexport const Block = ({description, block, type, selected, onSelect}) => (\r\n    <Paper\r\n        style={{\r\n            border: selected && '3px solid #2196F3',\r\n            cursor: 'pointer'\r\n        }}\r\n        onClick={onSelect}\r\n    >\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            style={{\r\n                minWidth: 300,\r\n                height: 280,\r\n                textAlign: 'center'\r\n            }}\r\n        >\r\n            <Grid>\r\n                <Typography\r\n                    variant=\"body1\"\r\n                >{description.temperature}</Typography>\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"primary\"\r\n                >{(type && toCelsius(block)) || toFahrenheit(block)}\r\n                 {(type && celsiusShort) || fahrenheitShort}</Typography>\r\n            </Grid>\r\n            <Grid>\r\n                <Typography\r\n                    variant=\"body1\"\r\n                >{description.date}</Typography>\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"secondary\"\r\n                >{formatDate(block[0].date)}</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    </Paper>\r\n);","export const dateNumberLimit = 10;\r\n\r\nexport const formatDate = (dateISO) => {\r\n    const date = new Date(\r\n        dateISO\r\n            .slice(0, dateNumberLimit)\r\n            .split('-')\r\n            .join(',')\r\n    );\r\n\r\n    return new Intl.DateTimeFormat('de-DE', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n    }).format(date);\r\n};\r\n","import React from 'react';\r\n\r\nimport { Block } from '../';\r\nimport { Grid } from '../../../shared/material-ui';\r\n\r\nexport const BlockGroup = ({blocks, type, description, selected, onSelect}) => (\r\n    <Grid\r\n        container\r\n        direction=\"row\"\r\n        wrap=\"nowrap\"\r\n    >\r\n        {blocks.map((block, index) => (\r\n            <Block\r\n                key={index}\r\n                type={type}\r\n                block={block}\r\n                description={description}\r\n                onSelect={() => onSelect(index)}\r\n                selected={selected === index}\r\n            />\r\n        ))}\r\n    </Grid>\r\n);","import React from 'react';\r\n\r\nimport {\r\n    FormControlLabel,\r\n    Radio\r\n} from '../../../shared/material-ui';\r\n\r\nexport const Checkbox = ({selection, defaultSelected, onChange}) => (\r\n    <FormControlLabel\r\n        control={<Radio color={'primary'} />}\r\n        value={selection}\r\n        label={selection}\r\n        onChange={onChange}\r\n        checked={defaultSelected}\r\n    />\r\n);","import React from 'react';\r\n\r\nimport { Checkbox } from '../';\r\nimport {\r\n    FormControl,\r\n    RadioGroup,\r\n    Grid\r\n} from '../../../shared/material-ui';\r\n\r\nexport const CheckboxGroup = ({selections, defaultSelected, onChange}) => (\r\n    <FormControl\r\n        style={{\r\n            width: '80%',\r\n            margin: 'auto',\r\n        }}\r\n    >\r\n        <RadioGroup\r\n            aria-label=\"temperature\"\r\n            name=\"weather-status\"\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n            >\r\n                {selections.map((selection, index) => (\r\n                    <Checkbox\r\n                        key={index}\r\n                        selection={selection}\r\n                        onChange={() => {onChange(index)}}\r\n                        defaultSelected={defaultSelected === index}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </RadioGroup>\r\n    </FormControl>\r\n);","import React from 'react';\r\n\r\nimport {\r\n    Typography,\r\n    CircularProgress,\r\n    Grid\r\n} from '../../../shared/material-ui';\r\n\r\nexport const Loader = ({loadingText}) => (\r\n    <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        style={{height: '100vh'}}\r\n    >\r\n        <Typography\r\n            variant={'h1'}\r\n        >{loadingText}</Typography>\r\n        <CircularProgress\r\n            color='primary'\r\n        />\r\n    </Grid>\r\n);","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { weatherStyles } from './weather.component.style';\r\nimport { Grid } from '../../shared/material-ui';\r\n\r\nimport { initMapDispatchToProps } from '../../shared/utils';\r\nimport {\r\n    loadText,\r\n    fahrenheitShort,\r\n    celsiusShort,\r\n    temperature,\r\n    date\r\n} from '../../i18n/weather.en';\r\nimport {\r\n    Loader,\r\n    ArrowGroup,\r\n    BarChart,\r\n    BlockGroup,\r\n    CheckboxGroup\r\n} from '../../shared/components';\r\n\r\nconst mapStateToProps = state => ({...state});\r\nconst mapDispatchToProps = dispatch => initMapDispatchToProps(dispatch);\r\n\r\nclass WeatherComponent extends Component{\r\n    componentDidMount() {\r\n        this.props.fetchWeather();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            data,\r\n            temp,\r\n            selectedDate,\r\n            switchBetweenTemps,\r\n            selectWeatherByDay\r\n        } = this.props;\r\n\r\n        if (!data) {\r\n            return <Loader loadingText={loadText} />;\r\n        }\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid\r\n                    container\r\n                    className={classes.checkboxGroup}\r\n                >\r\n                    <CheckboxGroup\r\n                        defaultSelected={temp}\r\n                        selections={[fahrenheitShort, celsiusShort]}\r\n                        onChange={(type) => switchBetweenTemps(type)}\r\n                    />\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    className={classes.arrowGroup}\r\n                >\r\n                    <ArrowGroup />\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    className={classes.blockGroup}\r\n                >\r\n                    <BlockGroup\r\n                        type={temp}\r\n                        blocks={data}\r\n                        selected={selectedDate}\r\n                        description={{temperature, date}}\r\n                        onSelect={(day) => selectWeatherByDay(day)}\r\n                    />\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    className={classes.barChart}\r\n                >\r\n                    {data[selectedDate] && <BarChart\r\n                        date={data[selectedDate]}\r\n                        type={temp}\r\n                    />}\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(weatherStyles)(WeatherComponent));","export const weatherStyles = () => ({\r\n    arrowGroup: {\r\n        width: '100%',\r\n        marginBottom: 30\r\n    },\r\n    checkboxGroup: {\r\n        marginBottom: 30\r\n    },\r\n    blockGroup: {\r\n        width: '80%',\r\n        marginBottom: 30\r\n    },\r\n    barChart: {\r\n        width: '85%'\r\n    },\r\n});","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport { weatherStore } from './store';\nimport { Theme } from './shared/material-ui';\nimport Weather from './pages/weather/weather.component';\n\nexport class App extends Component {\n    render () {\n        return (\n            <ThemeProvider theme={Theme}>\n                <Provider store={weatherStore}>\n                    <Weather />\n                </Provider>\n            </ThemeProvider>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}