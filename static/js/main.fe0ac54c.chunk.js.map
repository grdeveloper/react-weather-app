{"version":3,"sources":["store/types.js","shared/utils/createActions.js","shared/utils/handleResponse.js","store/actions.js","store/handlers.js","http/http.service.js","store/effects.js","store/reducers.js","store/state-model.js","shared/material-ui/material-theme.js","shared/components/arrow/arrow.component.js","shared/components/arrowGroup/arrowGroup.component.js","shared/components/bar/bar.component.js","shared/components/barChart/barChart.component.js","shared/components/block/block.component.js","shared/components/blockGroup/blockGroup.component.js","shared/components/checkbox/checkbox.component.js","shared/components/checkboxGroup/checkboxGroup.component.js","shared/components/loader/loader.component.js","pages/weather/weather.component.js","shared/utils/initMapDispatchToProps.js","pages/weather/weather.component.style.js","App.js","serviceWorker.js","index.js"],"names":["fetchWeather","fetchWeatherSuccess","fetchWeatherFailure","createAction","type","payload","handleResponse","state","response","data","dates","list","forEach","weather","date","dt_txt","slice","indexOf","push","length","temp","main","FetchWeather","types","SwitchToCelsius","SwitchToFahrenheit","GoBackwards","GoForwards","SelectWeatherByDay","Handlers","action","axiosInstance","axios","baseURL","http","weatherEndPoint","handleError","weatherSaga","call","put","console","warn","takeLatest","effects","createSagaMiddleware","weatherStore","createStore","initialState","applyMiddleware","run","Object","freeze","fahrenheit","celsius","selectedData","Theme","createMuiTheme","palette","primary","blue","secondary","pink","contrastThreshold","tonalOffset","typography","h1","fontSize","fontWeight","h2","body1","Arrow","direction","Fab","Icon","color","ArrowGroup","Grid","container","justify","alignItems","map","arrow","index","key","Bar","temperature","style","flexBasis","Paper","maxWidth","height","backgroundColor","Typography","variant","BarChart","Block","description","minWidth","BlockGroup","blocks","wrap","block","Checkbox","selection","FormControlLabel","control","Radio","value","label","checked","CheckboxGroup","selections","FormControl","width","margin","RadioGroup","aria-label","name","Loader","loadingText","CircularProgress","WeatherComponent","this","props","classes","log","className","checkboxGroup","arrowGroup","blockGroup","barChart","appText","loadText","Component","connect","dispatch","actions","switchToCelsius","switchToFahrenheit","goBackwards","goForwards","selectWeatherByDay","initMapDispatchToProps","withStyles","marginBottom","App","ThemeProvider","theme","store","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe0ac54c.chunk.js","sourcesContent":["export const fetchWeather = '[WEATHER] Fetch weather';\r\nexport const fetchWeatherSuccess = '[WEATHER] Fetch weather success';\r\nexport const fetchWeatherFailure = '[WEATHER] Fetch weather failure';\r\n\r\nexport const switchToCelsius = '[WEATHER] Switch to celsius';\r\nexport const switchToFahrenheit = '[WEATHER] Switch to fahrenheit';\r\nexport const goBackwards = '[WEATHER] Go backwards';\r\nexport const goForwards = '[WEATHER] Go forwards';\r\nexport const selectWeatherByDay = '[WEATHER] Select weather by day';\r\n","export const createAction = (type, payload) => ({type, payload});","export const dateFormat = 10;\r\n\r\nexport const handleResponse = (state, response) => {\r\n    const data = [];\r\n    const dates = [];\r\n\r\n    response.data.list.forEach(weather => {\r\n        const date = weather.dt_txt.slice(0, dateFormat);\r\n\r\n        if (!~dates.indexOf(date)) {\r\n            dates.push(date);\r\n            data.push([]);\r\n        }\r\n\r\n        data[data.length - 1].push(\r\n            {\r\n                date: weather.dt_txt,\r\n                temp: weather.main.temp\r\n            }\r\n        );\r\n    });\r\n\r\n    return {\r\n        ...state,\r\n        data,\r\n    };\r\n};\r\n","import * as types from './types';\r\nimport { createAction } from '../shared/utils';\r\n\r\nexport const FetchWeather = createAction(types.fetchWeather);\r\nexport const SwitchToCelsius = createAction(types.switchToCelsius);\r\nexport const SwitchToFahrenheit = createAction(types.switchToFahrenheit);\r\nexport const GoBackwards = createAction(types.goBackwards);\r\nexport const GoForwards = createAction(types.goForwards);\r\nexport const SelectWeatherByDay = createAction(types.selectWeatherByDay);\r\n","import * as types from './types';\r\nimport {\r\n    handleResponse\r\n} from '../shared/utils';\r\n\r\nexport const Handlers = {\r\n    [types.fetchWeatherSuccess]: (state, action) => handleResponse(state, action.payload),\r\n    [types.switchToCelsius]: (state) => ({...state}),\r\n    [types.switchToFahrenheit]: (state) => ({...state}),\r\n    [types.goBackwards]: (state) => ({...state}),\r\n    [types.goForwards]: (state) => ({...state}),\r\n    [types.selectWeatherByDay]: (state) => ({...state}),\r\n};","import * as axios from \"axios\";\r\n\r\nimport http from '../config/weather.config';\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: http.weatherEndPoint\r\n});","import { call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport * as types from './types';\r\nimport { axiosInstance } from '../http';\r\nimport {createAction} from '../shared/utils';\r\n\r\nfunction* fetchWeather() {\r\n    try {\r\n        const weather = yield call(axiosInstance);\r\n        yield put(createAction(types.fetchWeatherSuccess, weather));\r\n    } catch (e) {\r\n        yield put(createAction(types.fetchWeatherFailure));\r\n    }\r\n}\r\n\r\nfunction* handleError() {\r\n    yield console.warn('Something went wrong.');\r\n}\r\n\r\nexport default function* weatherSaga() {\r\n    yield takeLatest(types.fetchWeather, fetchWeather);\r\n\r\n    yield takeLatest([types.fetchWeatherFailure], handleError);\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { Handlers } from './';\r\nimport { initialState } from './';\r\nimport weatherSaga from './effects';\r\n\r\nconst effects = createSagaMiddleware();\r\n\r\nexport const weatherReducer = (state = initialState, action) =>\r\n    (Handlers[action.type] && Handlers[action.type](state, action)) || state;\r\nexport const weatherStore = createStore(weatherReducer, applyMiddleware(effects));\r\n\r\neffects.run(weatherSaga);\r\n","export const tempEnums = Object.freeze({\r\n    fahrenheit: 0,\r\n    celsius: 1\r\n});\r\n\r\nexport const initialState = {\r\n    temp: tempEnums.fahrenheit,\r\n    data: null,\r\n    selectedData: null\r\n};\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport blue from '@material-ui/core/colors/indigo';\r\nimport pink from '@material-ui/core/colors/pink';\r\n\r\nexport const Theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: pink,\r\n        contrastThreshold: 3,\r\n        tonalOffset: 0.2,\r\n    },\r\n    typography: {\r\n        h1: {\r\n            fontSize: 28,\r\n            fontWeight: 600,\r\n        },\r\n        h2: {\r\n            fontSize: 24,\r\n            fontWeight: 500,\r\n        },\r\n        body1: {\r\n            fontSize: 21,\r\n            fontWeight: 400,\r\n        },\r\n    },\r\n});","import React from 'react';\r\n\r\nimport {\r\n    Fab,\r\n    Icon\r\n} from '../../../shared/material-ui';\r\n\r\n// arrow_back, arrow_forward\r\n\r\nexport const Arrow = ({direction}) => (\r\n    <Fab>\r\n        <Icon\r\n            color={'primary'}\r\n        >{direction}</Icon>\r\n    </Fab>\r\n);\r\n","import React from 'react';\r\n\r\nimport { Arrow } from '../';\r\nimport { Grid } from '../../../shared/material-ui';\r\n\r\nexport const ArrowGroup = () => (\r\n    <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n    >\r\n        {['arrow_back', 'arrow_forward'].map((arrow, index) => (\r\n            <Arrow\r\n                key={index}\r\n                direction={arrow}\r\n            />\r\n        ))}\r\n    </Grid>\r\n);","import React from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Typography\r\n} from '../../../shared/material-ui';\r\n\r\nexport const Bar = ({temperature, type}) => (\r\n    <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        style={{flexBasis: 40}}\r\n    >\r\n        <Paper\r\n            style={{\r\n                maxWidth: 50,\r\n                height: temperature * 3,\r\n                backgroundColor: '#f50057'\r\n            }}\r\n        />\r\n        <Typography\r\n            variant='body1'\r\n        >{temperature} {type}</Typography>\r\n    </Grid>\r\n);\r\n","import React from 'react';\r\n\r\nimport { Bar } from '../';\r\nimport { Grid } from '../../../shared/material-ui';\r\n\r\nexport const BarChart = () => (\r\n    <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-end\"\r\n    >\r\n        {['18', '19', '20', '21', '22', '23', '25'].map((temperature, index) => (\r\n            <Bar\r\n                key={index}\r\n                type={'f'}\r\n                temperature={temperature}\r\n            />\r\n        ))}\r\n    </Grid>\r\n);","import React from 'react';\r\n\r\nimport {\r\n    Paper,\r\n    Typography,\r\n    Grid\r\n} from '../../../shared/material-ui';\r\n\r\nexport const Block = ({description, temperature, type}) => (\r\n    <Paper>\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            style={{\r\n                minWidth: 320,\r\n                height: 300\r\n            }}\r\n        >\r\n            <Grid>\r\n                <Typography\r\n                    variant=\"body1\"\r\n                >{description.temperature}</Typography>\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"primary\"\r\n                >{temperature} {type}</Typography>\r\n            </Grid>\r\n            <Grid>\r\n                <Typography\r\n                    variant=\"body1\"\r\n                >{description.date}</Typography>\r\n                <Typography\r\n                    variant=\"h2\"\r\n                    color=\"secondary\"\r\n                >sdf</Typography>\r\n            </Grid>\r\n        </Grid>\r\n    </Paper>\r\n);","import React from 'react';\r\n\r\nimport { Block } from '../';\r\nimport { Grid } from '../../../shared/material-ui';\r\n\r\nexport const BlockGroup = ({blocks, temp}) => (\r\n    <Grid\r\n        container\r\n        direction=\"row\"\r\n        wrap=\"nowrap\"\r\n    >\r\n        {blocks.map((block, index) => (\r\n            <Block\r\n                key={index}\r\n                temperature={block[0].temp}\r\n                type={temp}\r\n                description={{\r\n                    temperature: 'Temp:',\r\n                    date: 'Date:'\r\n                }}\r\n            />\r\n        ))}\r\n    </Grid>\r\n);","import React from 'react';\r\n\r\nimport {\r\n    FormControlLabel,\r\n    Radio\r\n} from '../../../shared/material-ui';\r\n\r\nexport const Checkbox = ({selection}) => (\r\n    <FormControlLabel\r\n        control={<Radio color={'primary'} />}\r\n        value={selection}\r\n        label={selection}\r\n        checked={selection === 'F'}\r\n    />\r\n);","import React from 'react';\r\n\r\nimport { Checkbox } from '../';\r\nimport {\r\n    FormControl,\r\n    RadioGroup,\r\n    Grid\r\n} from '../../../shared/material-ui';\r\n\r\nexport const CheckboxGroup = ({selections}) => (\r\n    <FormControl\r\n        style={{\r\n            width: '80%',\r\n            margin: 'auto',\r\n        }}\r\n    >\r\n        <RadioGroup\r\n            aria-label=\"temperature\"\r\n            name=\"weather-status\"\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n            >\r\n                {['F', 'C'].map((selection, index) => (\r\n                    <Checkbox\r\n                        selection={selection}\r\n                        key={index}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </RadioGroup>\r\n    </FormControl>\r\n);","import React from 'react';\r\n\r\nimport {\r\n    Typography,\r\n    CircularProgress,\r\n    Grid\r\n} from '../../../shared/material-ui';\r\n\r\nexport const Loader = ({loadingText}) => (\r\n    <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        style={{height: '100vh'}}\r\n    >\r\n        <Typography\r\n            variant={'h1'}\r\n        >{loadingText}</Typography>\r\n        <CircularProgress\r\n            color='primary'\r\n        />\r\n    </Grid>\r\n);","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { weatherStyles } from './weather.component.style';\r\nimport { Grid } from '../../shared/material-ui';\r\n\r\nimport appText from '../../i18n/weather.en';\r\nimport { initMapDispatchToProps } from '../../shared/utils';\r\n\r\nimport {\r\n    Loader,\r\n    ArrowGroup,\r\n    BarChart,\r\n    BlockGroup,\r\n    CheckboxGroup\r\n} from '../../shared/components';\r\n\r\nconst mapStateToProps = state => ({...state});\r\nconst mapDispatchToProps = dispatch => initMapDispatchToProps(dispatch);\r\n\r\nclass WeatherComponent extends Component{\r\n    componentDidMount() {\r\n        this.props.fetchWeather();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            data,\r\n            temp,\r\n        } = this.props;\r\n        console.log('===>', this.props);\r\n\r\n        if (!data) {\r\n            return <Loader loadingText={appText.loadText} />;\r\n        }\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid\r\n                    container\r\n                    className={classes.checkboxGroup}\r\n                >\r\n                    <CheckboxGroup />\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    className={classes.arrowGroup}\r\n                >\r\n                    <ArrowGroup />\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    className={classes.blockGroup}\r\n                >\r\n                    <BlockGroup\r\n                        blocks={data}\r\n                        type={temp}\r\n                    />\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    className={classes.barChart}\r\n                >\r\n                    <BarChart />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(weatherStyles)(WeatherComponent));","import * as actions from '../../store/actions';\r\n\r\nexport const initMapDispatchToProps = dispatch => ({\r\n    fetchWeather: () => dispatch(actions.FetchWeather),\r\n    switchToCelsius: () => dispatch(actions.SwitchToCelsius),\r\n    switchToFahrenheit: () => dispatch(actions.SwitchToFahrenheit),\r\n    goBackwards: () => dispatch(actions.GoBackwards),\r\n    goForwards: () => dispatch(actions.GoForwards),\r\n    selectWeatherByDay: () => dispatch(actions.SelectWeatherByDay),\r\n});","export const weatherStyles = () => ({\r\n    arrowGroup: {\r\n        width: '100%',\r\n        marginBottom: 35\r\n    },\r\n    checkboxGroup: {\r\n        marginBottom: 35\r\n    },\r\n    blockGroup: {\r\n        width: '80%',\r\n        marginBottom: 35\r\n    },\r\n    barChart: {\r\n        width: '85%'\r\n    },\r\n});","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport { weatherStore } from './store';\nimport { Theme } from './shared/material-ui';\nimport Weather from './pages/weather/weather.component';\n\nexport class App extends Component {\n    render () {\n        return (\n            <ThemeProvider theme={Theme}>\n                <Provider store={weatherStore}>\n                    <Weather />\n                </Provider>\n            </ThemeProvider>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}